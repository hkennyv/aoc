var searchIndex = JSON.parse('{\
"aoc_2019":{"doc":"Advent of Code (2019)","t":[5],"n":["main"],"q":["aoc_2019"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"day01":{"doc":"— Day 1: The Tyranny of the Rocket Equation —","t":[0,5,5,5,5,5,5,12,12,12,12,12,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,5,11,11,11,11,12,5,5,5,5,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["fs","get_fuel_requirement1","get_fuel_requirement2","main","part1","part2","read_input","0","0","0","0","0","0","DirBuilder","DirEntry","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","accessed","append","as_fd","as_raw_fd","as_raw_stat","atime","atime_nsec","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","created","ctime","ctime_nsec","custom_flags","dev","eq","eq","file_name","file_name_ref","file_type","file_type","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mode","from_raw_fd","gid","hard_link","hash","initializer","inner","inner","ino","ino","into","into","into","into","into","into","into","into","into_iter","into_raw_fd","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_read_vectored","is_socket","is_symlink","is_symlink","is_write_vectored","len","metadata","metadata","metadata","mode","mode","mode","mode","modified","mtime","mtime_nsec","ne","ne","new","new","next","nlink","open","open","options","path","permissions","rdev","read","read","read","read_at","read_dir","read_link","read_to_end","read_to_string","read_to_string","read_vectored","readonly","recursive","recursive","remove_dir","remove_dir_all","remove_file","rename","seek","set_len","set_mode","set_permissions","set_permissions","set_readonly","size","soft_link","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","symlink_metadata","sync_all","sync_data","to_owned","to_owned","to_owned","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","write","write","write","write_at","write_vectored"],"q":["day01","","","","","","","day01::fsd":["Filesystem manipulation operations.","","","","","","","","","","","","","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","A reference to an open file on the filesystem.","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Returns the last access time of this metadata.","Sets the option for the append mode.","","","","","","","","","","","","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","","","","","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Sets the option to create a new file, or open it if it …","Creates the specified directory with the options …","Creates a new, empty directory at the provided path","Recursively create a directory and all of its parent …","Sets the option to create a new file, failing if it …","Returns the creation time listed in this metadata.","","","","","","","Returns the bare file name of this directory entry without …","","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","","","","","","","","","","","","","","","","","","","","","","Creates a new hard link on the filesystem.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this metadata is for a directory. The …","Tests whether this file type represents a directory. The …","","Returns <code>true</code> if this metadata is for a regular file. The …","Tests whether this file type represents a regular file. …","","","Returns <code>true</code> if this metadata is for a symbolic link.","Tests whether this file type represents a symbolic link. …","","Returns the size of the file, in bytes, this metadata is …","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","","","","","Returns the last modification time listed in this metadata.","","","","","Creates a blank new set of options ready for configuration.","Creates a new set of options with default mode/security …","","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","","Read the entire contents of a file into a bytes vector.","","Sets the option for read access.","","Returns an iterator over the entries within a directory.","Reads a symbolic link, returning the file that the link …","","Read the entire contents of a file into a string.","","","Returns <code>true</code> if these permissions describe a readonly …","Indicates that directories should be created recursively, …","","Removes an empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Rename a file or directory to a new name, replacing the …","","Truncates or extends the underlying file, updating the …","","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Modifies the readonly flag for this set of permissions. If …","","Creates a new symbolic link on the filesystem.","","","","","","","","","","","","","","","","","Query the metadata about a file without following symlinks.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it might …","","","","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","","Sets the option for write access.","",""],"i":[0,0,0,0,0,0,0,1,2,3,4,5,6,0,0,0,0,0,0,0,0,2,4,7,7,2,2,2,2,2,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,0,2,4,5,6,2,4,5,6,0,7,4,8,0,0,4,2,2,2,4,2,5,6,1,1,1,2,7,7,1,2,3,4,5,6,8,7,7,1,2,3,4,5,6,8,5,7,2,0,6,7,7,8,1,2,7,1,2,3,4,5,6,8,3,7,6,6,2,6,6,2,6,7,6,2,6,7,2,0,7,1,2,4,5,8,2,2,2,5,6,4,8,3,2,7,4,7,1,2,2,0,7,4,7,0,0,7,0,7,7,5,8,8,0,0,0,0,7,7,5,0,7,5,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,7,7,2,4,5,6,4,7,0,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,2,0,7,4,7,7],"f":[null,[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[]],[[],["usize",15]],[[],["usize",15]],[[["str",15]],["vec",3,[["usize",15]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["systemtime",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["borrowedfd",3]],[[],["i32",15]],[[],["stat",3]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[],["metadata",3]],[[],["openoptions",3]],[[],["permissions",3]],[[],["filetype",3]],[[]],[[]],[[]],[[]],[[],["result",4,[["u64",15],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["i32",15]],["openoptions",3]],[[],["u64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["osstring",3]],[[],["osstr",3]],[[],["result",4,[["filetype",3],["error",3]]]],[[],["filetype",3]],[[],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["ownedfd",3]],["file",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["permissions",3]],[[["i32",15]],["file",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[]],[[],["initializer",3]],null,null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["u32",15]],[[["u32",15]],["openoptions",3]],[[],["u32",15]],[[["u32",15]],["dirbuilder",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["openoptions",3]],[[],["dirbuilder",3]],[[],["option",4,[["result",4,[["direntry",3],["error",3]]]]]],[[],["u64",15]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[],["openoptions",3]],[[],["pathbuf",3]],[[],["permissions",3]],[[],["u64",15]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["readdir",3],["error",3]]]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[["vec",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["string",3],["error",3]]]],[[["string",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[],["bool",15]],[[["bool",15]],["dirbuilder",3]],null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["seekfrom",4]],["result",4,[["u64",15],["error",3]]]],[[["u64",15]],["result",4,[["error",3]]]],[[["u32",15]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["bool",15]]],[[],["u64",15]],[[],["result",4,[["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["bool",15],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]]],"p":[[3,"DirEntry"],[3,"Metadata"],[3,"ReadDir"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"DirBuilder"]],"a":{"mkdir":[59],"rmdir":[159]}},\
"day02":{"doc":"— Day 2: 1202 Program Alarm —","t":[0,5,5,5,5,5,12,12,12,12,12,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,5,11,11,11,11,12,5,5,5,5,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["fs","main","part1","part2","process_opcodes","read_input","0","0","0","0","0","0","DirBuilder","DirEntry","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","accessed","append","as_fd","as_raw_fd","as_raw_stat","atime","atime_nsec","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","created","ctime","ctime_nsec","custom_flags","dev","eq","eq","file_name","file_name_ref","file_type","file_type","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mode","from_raw_fd","gid","hard_link","hash","initializer","inner","inner","ino","ino","into","into","into","into","into","into","into","into","into_iter","into_raw_fd","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_read_vectored","is_socket","is_symlink","is_symlink","is_write_vectored","len","metadata","metadata","metadata","mode","mode","mode","mode","modified","mtime","mtime_nsec","ne","ne","new","new","next","nlink","open","open","options","path","permissions","rdev","read","read","read","read_at","read_dir","read_link","read_to_end","read_to_string","read_to_string","read_vectored","readonly","recursive","recursive","remove_dir","remove_dir_all","remove_file","rename","seek","set_len","set_mode","set_permissions","set_permissions","set_readonly","size","soft_link","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","symlink_metadata","sync_all","sync_data","to_owned","to_owned","to_owned","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","write","write","write","write_at","write_vectored"],"q":["day02","","","","","","day02::fsd":["Filesystem manipulation operations.","","","","","","","","","","","","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","A reference to an open file on the filesystem.","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Returns the last access time of this metadata.","Sets the option for the append mode.","","","","","","","","","","","","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","","","","","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Sets the option to create a new file, or open it if it …","Creates the specified directory with the options …","Creates a new, empty directory at the provided path","Recursively create a directory and all of its parent …","Sets the option to create a new file, failing if it …","Returns the creation time listed in this metadata.","","","","","","","Returns the bare file name of this directory entry without …","","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","","","","","","","","","","","","","","","","","","","","","","Creates a new hard link on the filesystem.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this metadata is for a directory. The …","Tests whether this file type represents a directory. The …","","Returns <code>true</code> if this metadata is for a regular file. The …","Tests whether this file type represents a regular file. …","","","Returns <code>true</code> if this metadata is for a symbolic link.","Tests whether this file type represents a symbolic link. …","","Returns the size of the file, in bytes, this metadata is …","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","","","","","Returns the last modification time listed in this metadata.","","","","","Creates a blank new set of options ready for configuration.","Creates a new set of options with default mode/security …","","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","","Read the entire contents of a file into a bytes vector.","","Sets the option for read access.","","Returns an iterator over the entries within a directory.","Reads a symbolic link, returning the file that the link …","","Read the entire contents of a file into a string.","","","Returns <code>true</code> if these permissions describe a readonly …","Indicates that directories should be created recursively, …","","Removes an empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Rename a file or directory to a new name, replacing the …","","Truncates or extends the underlying file, updating the …","","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Modifies the readonly flag for this set of permissions. If …","","Creates a new symbolic link on the filesystem.","","","","","","","","","","","","","","","","","Query the metadata about a file without following symlinks.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it might …","","","","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","","Sets the option for write access.","",""],"i":[0,0,0,0,0,0,1,2,3,4,5,6,0,0,0,0,0,0,0,0,2,4,7,7,2,2,2,2,2,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,0,2,4,5,6,2,4,5,6,0,7,4,8,0,0,4,2,2,2,4,2,5,6,1,1,1,2,7,7,1,2,3,4,5,6,8,7,7,1,2,3,4,5,6,8,5,7,2,0,6,7,7,8,1,2,7,1,2,3,4,5,6,8,3,7,6,6,2,6,6,2,6,7,6,2,6,7,2,0,7,1,2,4,5,8,2,2,2,5,6,4,8,3,2,7,4,7,1,2,2,0,7,4,7,0,0,7,0,7,7,5,8,8,0,0,0,0,7,7,5,0,7,5,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,7,7,2,4,5,6,4,7,0,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,7,1,2,3,4,5,6,8,2,0,7,4,7,7],"f":[null,[[]],[[],["usize",15]],[[],["result",4,[["usize",15],["str",15]]]],[[]],[[["str",15]],["vec",3,[["usize",15]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["systemtime",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["borrowedfd",3]],[[],["i32",15]],[[],["stat",3]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[],["metadata",3]],[[],["openoptions",3]],[[],["permissions",3]],[[],["filetype",3]],[[]],[[]],[[]],[[]],[[],["result",4,[["u64",15],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["i32",15]],["openoptions",3]],[[],["u64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["osstring",3]],[[],["osstr",3]],[[],["result",4,[["filetype",3],["error",3]]]],[[],["filetype",3]],[[],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["ownedfd",3]],["file",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["permissions",3]],[[["i32",15]],["file",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[]],[[],["initializer",3]],null,null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["u32",15]],[[["u32",15]],["openoptions",3]],[[],["u32",15]],[[["u32",15]],["dirbuilder",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["openoptions",3]],[[],["dirbuilder",3]],[[],["option",4,[["result",4,[["direntry",3],["error",3]]]]]],[[],["u64",15]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[],["openoptions",3]],[[],["pathbuf",3]],[[],["permissions",3]],[[],["u64",15]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["readdir",3],["error",3]]]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[["vec",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["string",3],["error",3]]]],[[["string",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[],["bool",15]],[[["bool",15]],["dirbuilder",3]],null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["seekfrom",4]],["result",4,[["u64",15],["error",3]]]],[[["u64",15]],["result",4,[["error",3]]]],[[["u32",15]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["bool",15]]],[[],["u64",15]],[[],["result",4,[["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["bool",15],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]]],"p":[[3,"DirEntry"],[3,"Metadata"],[3,"ReadDir"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"DirBuilder"]],"a":{"mkdir":[58],"rmdir":[158]}},\
"day03":{"doc":"— Day 3: Crossed Wires —","t":[4,13,3,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,5,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,5,11,11,11,11,12,5,5,5,5,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["Direction","Down","HashMap","Left","Right","Up","base","borrow","borrow","borrow_mut","borrow_mut","capacity","clear","clone","clone_from","clone_into","contains_key","default","drain","drain_filter","entry","eq","extend","extend","extend_one","extend_one","extend_reserve","extend_reserve","fmt","from","from","from","from_iter","fs","get","get_key_value","get_mut","hasher","index","insert","into","into","into_iter","into_keys","into_values","is_empty","iter","iter_mut","keys","len","main","manhattan_distance","new","part1","part2","raw_entry","raw_entry_mut","read_input","remove","remove_entry","reserve","retain","shrink_to","shrink_to_fit","to_direction","to_owned","try_from","try_from","try_insert","try_into","try_into","try_reserve","type_id","type_id","update_grid","update_grid2","values","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","0","0","0","0","0","0","0","0","0","0","DirBuilder","DirEntry","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","accessed","append","as_fd","as_raw_fd","as_raw_stat","atime","atime_nsec","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","created","ctime","ctime_nsec","custom_flags","dev","eq","eq","file_name","file_name_ref","file_type","file_type","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mode","from_raw_fd","gid","hard_link","hash","initializer","inner","inner","ino","ino","into","into","into","into","into","into","into","into","into_iter","into_raw_fd","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_read_vectored","is_socket","is_symlink","is_symlink","is_write_vectored","len","metadata","metadata","metadata","mode","mode","mode","mode","modified","mtime","mtime_nsec","ne","ne","new","new","next","nlink","open","open","options","path","permissions","rdev","read","read","read","read_at","read_dir","read_link","read_to_end","read_to_string","read_to_string","read_vectored","readonly","recursive","recursive","remove_dir","remove_dir_all","remove_file","rename","seek","set_len","set_mode","set_permissions","set_permissions","set_readonly","size","soft_link","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","symlink_metadata","sync_all","sync_data","to_owned","to_owned","to_owned","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","write","write","write","write_at","write_vectored"],"q":["day03","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","day03::Direction","","","","day03::fsd":["","","A hash map implemented with quadratic probing and SIMD …","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …","Clears the map, returning all key-value pairs as an …","Creates an iterator which uses a closure to determine if …","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","Examples","","","Filesystem manipulation operations.","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","","","Creates a consuming iterator, that is, one that moves each …","Creates a consuming iterator visiting all the keys in …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","Creates an empty <code>HashMap</code>.","","","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","","Removes a key from the map, returning the value at the key …","Removes a key from the map, returning the stored key and …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","Tries to insert a key-value pair into the map, and returns …","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","","","","","","","","","","","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","A reference to an open file on the filesystem.","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Returns the last access time of this metadata.","Sets the option for the append mode.","","","","","","","","","","","","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","","","","","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Sets the option to create a new file, or open it if it …","Creates the specified directory with the options …","Creates a new, empty directory at the provided path","Recursively create a directory and all of its parent …","Sets the option to create a new file, failing if it …","Returns the creation time listed in this metadata.","","","","","","","Returns the bare file name of this directory entry without …","","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","","","","","","","","","","","","","","","","","","","","","","Creates a new hard link on the filesystem.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this metadata is for a directory. The …","Tests whether this file type represents a directory. The …","","Returns <code>true</code> if this metadata is for a regular file. The …","Tests whether this file type represents a regular file. …","","","Returns <code>true</code> if this metadata is for a symbolic link.","Tests whether this file type represents a symbolic link. …","","Returns the size of the file, in bytes, this metadata is …","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","","","","","Returns the last modification time listed in this metadata.","","","","","Creates a blank new set of options ready for configuration.","Creates a new set of options with default mode/security …","","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","","Read the entire contents of a file into a bytes vector.","","Sets the option for read access.","","Returns an iterator over the entries within a directory.","Reads a symbolic link, returning the file that the link …","","Read the entire contents of a file into a string.","","","Returns <code>true</code> if these permissions describe a readonly …","Indicates that directories should be created recursively, …","","Removes an empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Rename a file or directory to a new name, replacing the …","","Truncates or extends the underlying file, updating the …","","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Modifies the readonly flag for this set of permissions. If …","","Creates a new symbolic link on the filesystem.","","","","","","","","","","","","","","","","","Query the metadata about a file without following symlinks.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it might …","","","","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","","Sets the option for write access.","",""],"i":[0,1,0,1,1,1,2,1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,0,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,0,0,2,0,0,2,2,0,2,2,2,2,2,2,0,2,1,2,2,1,2,2,1,2,0,0,2,2,2,2,2,3,4,5,6,7,8,9,10,11,12,0,0,0,0,0,0,0,0,8,10,13,13,8,8,8,8,8,13,7,8,9,10,11,12,14,13,7,8,9,10,11,12,14,0,8,10,11,12,8,10,11,12,0,13,10,14,0,0,10,8,8,8,10,8,11,12,7,7,7,8,13,13,7,8,9,10,11,12,14,13,13,7,8,9,10,11,12,14,11,13,8,0,12,13,13,14,7,8,13,7,8,9,10,11,12,14,9,13,12,12,8,12,12,8,12,13,12,8,12,13,8,0,13,7,8,10,11,14,8,8,8,11,12,10,14,9,8,13,10,13,7,8,8,0,13,10,13,0,0,13,0,13,13,11,14,14,0,0,0,0,13,13,11,0,13,11,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,13,13,8,10,11,12,10,13,0,13,7,8,9,10,11,12,14,13,7,8,9,10,11,12,14,13,7,8,9,10,11,12,14,8,0,13,10,13,13],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["hashmap",3]],[[["hashmap",3]]],[[]],[[],["bool",15]],[[],["hashmap",3]],[[],["drain",3]],[[],["drainfilter",3]],[[],["entry",4]],[[["hashmap",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["hashmap",3,[["randomstate",3]]]],[[]],[[],["hashmap",3]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[],["intoiter",3]],[[],["intokeys",3]],[[],["intovalues",3]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["hashmap",3,[["randomstate",3]]]],[[],["usize",15]],[[],["usize",15]],[[],["rawentrybuilder",3]],[[],["rawentrybuildermut",3]],[[["str",15]]],[[],["option",4]],[[],["option",4]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[["str",15]],["direction",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["occupiederror",3]]]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4,[["tryreserveerror",3]]]],[[],["typeid",3]],[[],["typeid",3]],[[["hashmap",3]]],[[["hashmap",3],["usize",15]]],[[],["values",3]],[[],["valuesmut",3]],[[["usize",15]],["hashmap",3,[["randomstate",3]]]],[[["usize",15]],["hashmap",3]],[[],["hashmap",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["systemtime",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["borrowedfd",3]],[[],["i32",15]],[[],["stat",3]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[],["metadata",3]],[[],["openoptions",3]],[[],["permissions",3]],[[],["filetype",3]],[[]],[[]],[[]],[[]],[[],["result",4,[["u64",15],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["i32",15]],["openoptions",3]],[[],["u64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["osstring",3]],[[],["osstr",3]],[[],["result",4,[["filetype",3],["error",3]]]],[[],["filetype",3]],[[],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["ownedfd",3]],["file",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["permissions",3]],[[["i32",15]],["file",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[]],[[],["initializer",3]],null,null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["u32",15]],[[["u32",15]],["openoptions",3]],[[],["u32",15]],[[["u32",15]],["dirbuilder",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["openoptions",3]],[[],["dirbuilder",3]],[[],["option",4,[["result",4,[["direntry",3],["error",3]]]]]],[[],["u64",15]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[],["openoptions",3]],[[],["pathbuf",3]],[[],["permissions",3]],[[],["u64",15]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["readdir",3],["error",3]]]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[["vec",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["string",3],["error",3]]]],[[["string",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[],["bool",15]],[[["bool",15]],["dirbuilder",3]],null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["seekfrom",4]],["result",4,[["u64",15],["error",3]]]],[[["u64",15]],["result",4,[["error",3]]]],[[["u32",15]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["bool",15]]],[[],["u64",15]],[[],["result",4,[["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["bool",15],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]]],"p":[[4,"Direction"],[3,"HashMap"],[13,"Up"],[13,"Down"],[13,"Left"],[13,"Right"],[3,"DirEntry"],[3,"Metadata"],[3,"ReadDir"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"DirBuilder"]],"a":{"mkdir":[137],"rmdir":[237]}},\
"day04":{"doc":"— Day 4: Secure Container —","t":[3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,11,5,11,11,11,11,12,5,5,5,5,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["HashMap","base","borrow","borrow_mut","capacity","clear","clone","clone_from","clone_into","contains_key","default","drain","drain_filter","entry","eq","extend","extend","extend_one","extend_one","extend_reserve","extend_reserve","fmt","from","from","from_iter","fs","get","get_key_value","get_mut","hasher","index","insert","into","into_iter","into_keys","into_values","is_empty","is_valid_password","is_valid_password2","iter","iter_mut","keys","len","main","new","part1","part2","raw_entry","raw_entry_mut","read_input","remove","remove_entry","reserve","retain","shrink_to","shrink_to_fit","to_owned","try_from","try_insert","try_into","try_reserve","type_id","values","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","0","0","0","0","0","0","DirBuilder","DirEntry","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","accessed","append","as_fd","as_raw_fd","as_raw_stat","atime","atime_nsec","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","created","ctime","ctime_nsec","custom_flags","dev","eq","eq","file_name","file_name_ref","file_type","file_type","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mode","from_raw_fd","gid","hard_link","hash","initializer","inner","inner","ino","ino","into","into","into","into","into","into","into","into","into_iter","into_raw_fd","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_read_vectored","is_socket","is_symlink","is_symlink","is_write_vectored","len","metadata","metadata","metadata","mode","mode","mode","mode","modified","mtime","mtime_nsec","ne","ne","new","new","next","nlink","open","open","options","path","permissions","rdev","read","read","read","read_at","read_dir","read_link","read_to_end","read_to_string","read_to_string","read_vectored","readonly","recursive","recursive","remove_dir","remove_dir_all","remove_file","rename","seek","set_len","set_mode","set_permissions","set_permissions","set_readonly","size","soft_link","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","symlink_metadata","sync_all","sync_data","to_owned","to_owned","to_owned","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","write","write","write","write_at","write_vectored"],"q":["day04","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","day04::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A hash map implemented with quadratic probing and SIMD …","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …","Clears the map, returning all key-value pairs as an …","Creates an iterator which uses a closure to determine if …","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","Examples","","Filesystem manipulation operations.","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","","Creates a consuming iterator, that is, one that moves each …","Creates a consuming iterator visiting all the keys in …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","","","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","Creates an empty <code>HashMap</code>.","","","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","","Removes a key from the map, returning the value at the key …","Removes a key from the map, returning the stored key and …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","Tries to insert a key-value pair into the map, and returns …","","Tries to reserve capacity for at least <code>additional</code> more …","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","","","","","","","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","A reference to an open file on the filesystem.","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Returns the last access time of this metadata.","Sets the option for the append mode.","","","","","","","","","","","","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","","","","","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Sets the option to create a new file, or open it if it …","Creates the specified directory with the options …","Creates a new, empty directory at the provided path","Recursively create a directory and all of its parent …","Sets the option to create a new file, failing if it …","Returns the creation time listed in this metadata.","","","","","","","Returns the bare file name of this directory entry without …","","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","","","","","","","","","","","","","","","","","","","","","","Creates a new hard link on the filesystem.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this metadata is for a directory. The …","Tests whether this file type represents a directory. The …","","Returns <code>true</code> if this metadata is for a regular file. The …","Tests whether this file type represents a regular file. …","","","Returns <code>true</code> if this metadata is for a symbolic link.","Tests whether this file type represents a symbolic link. …","","Returns the size of the file, in bytes, this metadata is …","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","","","","","Returns the last modification time listed in this metadata.","","","","","Creates a blank new set of options ready for configuration.","Creates a new set of options with default mode/security …","","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","","Read the entire contents of a file into a bytes vector.","","Sets the option for read access.","","Returns an iterator over the entries within a directory.","Reads a symbolic link, returning the file that the link …","","Read the entire contents of a file into a string.","","","Returns <code>true</code> if these permissions describe a readonly …","Indicates that directories should be created recursively, …","","Removes an empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Rename a file or directory to a new name, replacing the …","","Truncates or extends the underlying file, updating the …","","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Modifies the readonly flag for this set of permissions. If …","","Creates a new symbolic link on the filesystem.","","","","","","","","","","","","","","","","","Query the metadata about a file without following symlinks.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it might …","","","","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","","Sets the option for write access.","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,0,0,0,0,0,0,0,0,3,5,8,8,3,3,3,3,3,8,2,3,4,5,6,7,9,8,2,3,4,5,6,7,9,0,3,5,6,7,3,5,6,7,0,8,5,9,0,0,5,3,3,3,5,3,6,7,2,2,2,3,8,8,2,3,4,5,6,7,9,8,8,2,3,4,5,6,7,9,6,8,3,0,7,8,8,9,2,3,8,2,3,4,5,6,7,9,4,8,7,7,3,7,7,3,7,8,7,3,7,8,3,0,8,2,3,5,6,9,3,3,3,6,7,5,9,4,3,8,5,8,2,3,3,0,8,5,8,0,0,8,0,8,8,6,9,9,0,0,0,0,8,8,6,0,8,6,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,8,8,3,5,6,7,5,8,0,8,2,3,4,5,6,7,9,8,2,3,4,5,6,7,9,8,2,3,4,5,6,7,9,3,0,8,5,8,8],"f":[null,null,[[]],[[]],[[],["usize",15]],[[]],[[],["hashmap",3]],[[["hashmap",3]]],[[]],[[],["bool",15]],[[],["hashmap",3]],[[],["drain",3]],[[],["drainfilter",3]],[[],["entry",4]],[[["hashmap",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["hashmap",3,[["randomstate",3]]]],[[],["hashmap",3]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[],["intoiter",3]],[[],["intokeys",3]],[[],["intovalues",3]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["usize",15]],[[]],[[],["hashmap",3,[["randomstate",3]]]],[[["usize",15],["usize",15]],["usize",15]],[[["usize",15],["usize",15]],["usize",15]],[[],["rawentrybuilder",3]],[[],["rawentrybuildermut",3]],[[["str",15]]],[[],["option",4]],[[],["option",4]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[],["result",4,[["occupiederror",3]]]],[[],["result",4]],[[["usize",15]],["result",4,[["tryreserveerror",3]]]],[[],["typeid",3]],[[],["values",3]],[[],["valuesmut",3]],[[["usize",15]],["hashmap",3,[["randomstate",3]]]],[[["usize",15]],["hashmap",3]],[[],["hashmap",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["systemtime",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["borrowedfd",3]],[[],["i32",15]],[[],["stat",3]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[],["metadata",3]],[[],["openoptions",3]],[[],["permissions",3]],[[],["filetype",3]],[[]],[[]],[[]],[[]],[[],["result",4,[["u64",15],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["i32",15]],["openoptions",3]],[[],["u64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["osstring",3]],[[],["osstr",3]],[[],["result",4,[["filetype",3],["error",3]]]],[[],["filetype",3]],[[],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["ownedfd",3]],["file",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["permissions",3]],[[["i32",15]],["file",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[]],[[],["initializer",3]],null,null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["u32",15]],[[["u32",15]],["openoptions",3]],[[],["u32",15]],[[["u32",15]],["dirbuilder",3]],[[],["result",4,[["systemtime",3],["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[["permissions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[],["openoptions",3]],[[],["dirbuilder",3]],[[],["option",4,[["result",4,[["direntry",3],["error",3]]]]]],[[],["u64",15]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["file",3],["error",3]]]],[[],["openoptions",3]],[[],["pathbuf",3]],[[],["permissions",3]],[[],["u64",15]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["readdir",3],["error",3]]]],[[],["result",4,[["pathbuf",3],["error",3]]]],[[["vec",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["string",3],["error",3]]]],[[["string",3]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[],["bool",15]],[[["bool",15]],["dirbuilder",3]],null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["seekfrom",4]],["result",4,[["u64",15],["error",3]]]],[[["u64",15]],["result",4,[["error",3]]]],[[["u32",15]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["permissions",3]],["result",4,[["error",3]]]],[[["bool",15]]],[[],["u64",15]],[[],["result",4,[["error",3]]]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["result",4,[["metadata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["bool",15]],["openoptions",3]],[[],["result",4,[["file",3],["error",3]]]],[[],["result",4,[["bool",15],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["result",4,[["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["bool",15]],["openoptions",3]],[[["u64",15]],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]]],"p":[[3,"HashMap"],[3,"DirEntry"],[3,"Metadata"],[3,"ReadDir"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"DirBuilder"]],"a":{"mkdir":[119],"rmdir":[219]}}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};