initSidebarItems({"enum":[["Rule","This enum defines a “Rule”. That is, either a single character, a list of rule numbers, or multiple lists of sub rule numbers separated by a pipe character (|)."]],"fn":[["evaluate_rule","Evaluates a rule recurively and returns the string correpsonding to the evaluated character sequence."],["main",""],["parse_input","The input.txt is split up into two portions: a top and a bottom. The top portion contains key value pairs (k: v) of the rules. The bottom half contains the test messages."],["parse_rule","Parses a rule given a string slice"],["part1","We want to evaluate rule 0 and see which messages match the evaluated character sequence."],["part2","In this part, we replace rule 8 and 11 with 42 | 42 8 and 42 31 | 42 11 31 respectively. For this implementation, we define a maximum depth that we want to generate the rules for since they are recursive (5 is the maximum depth required for my input)."],["s_to_vec","A simple helper function to convert a string to a Vec"]],"mod":[["fs","Filesystem manipulation operations."]],"struct":[["HashMap","A hash map implemented with quadratic probing and SIMD lookup."],["Regex","A compiled regular expression for matching Unicode strings."]],"trait":[["FromIterator","Conversion from an [`Iterator`]."]]});